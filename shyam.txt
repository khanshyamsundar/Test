This is for test to add into my git repository.

//Bind datePicker
bindDatePicker: function (selector, settings) {
                var datePicker = typeof selector == 'object' ? selector : (selector == undefined ? $(".dateField") : $(selector));
                if (datePicker != undefined && datePicker.length > 0) {
                    datePicker.removeClass("dateField").addClass("dateField");

                    var datePickerSettings = $.extend({
                        showOn: "button",
                        buttonImage: "../../iClosingsWeb/UI/Shared/Images/calender_icon.png",
                        buttonImageOnly: true,
                        buttonText: "Select date",
                        showAnim: "slideDown",
                        changeYear: true,
                        disabled: false,
                        yearRange: ICDUtility.Common.icdCommonBusinessData.moduleName == "OrderEntry" ? "1900:2500" : "c-10:c+10",                        
                        onSelect: function () { $(this).change().focus(); },
                    }, settings != undefined ? settings : {});

                    ICDUtility.DateUtility.unbindDatePicker(datePicker).datepicker(datePickerSettings); 

                    datePickerSettings = null;
                }
                datePicker = null;
            },
            
            
            
            
             unbindDatePicker: function (dateControl) {
                if (dateControl != undefined && dateControl.length > 0) {
                    //dateControl.datepicker("option", "disabled", false);
                    dateControl.datepicker('enable');
                    dateControl.datepicker("destroy");                   
                }
                return dateControl;
            },

            refreshDatePicker: function (selector) {
                $(selector).datepicker("refresh");
            },
            
            
            //Usage
            
            dateUtil.bindDatePicker(".datepicker");
            
            //Jquery-UI ver "1.12.1" 
            //http://jqueryui.com
            
            


var mult = multer({ dest: "uploads/" });
        // aws.config.update({
        //     signatureVersion: 'v4'
        // });
        var app = express(),
            s3 = new aws.S3({
                accessKeyId: "AKIAIN4LVSTYH53ZGPJA",
                secretAccessKey: "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",
                Bucket: "drgrep-staging",
            });
        app.use(bodyParser.json());
        var upload = multer({
            storage: multerS3({
                s3: s3,
                bucket: "drgrep-staging",
                key: function (req: any, file: any, cb: any) {
                    console.log(file);
                    cb(null, "uploaded-files/" + Date.now().toString() + "." + mime.extension(file.mimetype)); //use Date.now() for unique file keys
                }
            })
        });
        
        
        this.app.post("/accounts/payable-receivable/upload", upload.single("file"), function (req: express.Request, res: express.Response) {
            // console.log("STEP1:GET ARAP Module data\n" + req.query.sentInd);
            // console.log("STEP1:ARAP Module data\n" + req.body);
            // console.log(JSON.stringify(req));
            // res.status(200).json({ message: "Succesfull" });
            let arapObj: any = JSON.parse(req.body.jsonObj).data;
            let file: any = req.file;
            arapObj.iqp_file_path = file.location;
            arapObj.iqp_file_name = file.fileName;
            this._arapService.createEditInvoice(arapObj, req.query.sentInd,
                function (isSuccessfull: boolean, iqpId: number, error: any) {
                    if (error) {
                        res.status(500).json({ message: error });
                    } else {
                        res.status(200).json({ message: "Successful", iqpId: iqpId });
                    }
                });
        }.bind(this));
